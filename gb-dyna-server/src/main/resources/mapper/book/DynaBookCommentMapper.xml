<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geeboo.dyna.server.mapper.book.IDynaBookCommentMapper">
    <resultMap id="dtoMap" type="com.geeboo.dyna.server.client.dto.book.DynaBookCommentDTO">
        <id column="dyna_book_comment_id" jdbcType="INTEGER" property="dynaBookCommentId"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="book_user_id" jdbcType="INTEGER" property="bookUserId"/>
        <result column="num_reply" jdbcType="INTEGER" property="numReply"/>
        <result column="num_favor" jdbcType="INTEGER" property="numFavor"/>
        <result column="is_del" jdbcType="TINYINT" property="isDel"/>
        <result column="comment_content" jdbcType="VARCHAR" property="commentContent"/>
        <result column="index_no" jdbcType="TINYINT" property="indexNo"/>
        <result column="book_score" jdbcType="TINYINT" property="bookScore"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="create_by" jdbcType="INTEGER" property="createBy"/>
        <result column="modify_time" jdbcType="BIGINT" property="modifyTime"/>
        <result column="modify_by" jdbcType="INTEGER" property="modifyBy"/>

        <result column="is_sensitive" jdbcType="INTEGER" property="isSensitive"/>
    </resultMap>


    <resultMap id="listDtoMap" type="com.geeboo.dyna.server.client.dto.book.DynaBookCommentListDTO">
        <id column="dyna_book_comment_id" jdbcType="INTEGER" property="dynaBookCommentId"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="book_user_id" jdbcType="INTEGER" property="bookUserId"/>
        <result column="num_reply" jdbcType="INTEGER" property="numReply"/>
        <result column="num_favor" jdbcType="INTEGER" property="numFavor"/>
        <result column="book_score" jdbcType="TINYINT" property="bookScore"/>
        <result column="comment_content" jdbcType="VARCHAR" property="commentContent"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>

        <result column="is_sensitive" jdbcType="INTEGER" property="isSensitive"/>
    </resultMap>

    <select id="findById" resultMap="dtoMap">
        <![CDATA[


        select * from dyna_book_comment  where dyna_book_comment_id = #{dynaBookCommentId}


        ]]>
    </select>

    <insert id="add" parameterType="com.geeboo.dyna.server.client.dto.book.DynaBookCommentDTO" useGeneratedKeys="true"
            keyProperty="dynaBookCommentId">
        <![CDATA[


        insert into `dyna_book_comment`(
                `user_id`
                ,`book_user_id`
                ,`num_reply`
                ,`num_favor`
                ,`is_del`
                ,`is_sensitive`
                ,`comment_content`
                ,`index_no`
                ,`book_score`
                ,`create_time`
                ,`create_by`
                ,`modify_time`
                ,`modify_by`
                )values(
                #{userId}
                ,#{bookUserId}
                ,#{numReply}
                ,#{numFavor}
                ,#{isDel}
                ,#{isSensitive}
                ,#{commentContent}
                ,#{indexNo}
                ,#{bookScore}
                ,#{createTime}
                ,#{createBy}
                ,#{modifyTime}
                ,#{modifyBy}
                )


        ]]>
    </insert>

    <update id="update" parameterType="com.geeboo.dyna.server.client.dto.book.DynaBookCommentDTO">
        <![CDATA[


        update `dyna_book_comment` set
                            `user_id`=#{userId}
                ,            `book_user_id`=#{bookUserId}
                ,            `num_reply`=#{numReply}
                ,            `num_favor`=#{numFavor}
                ,            `is_del`=#{isDel}
                ,            `is_sensitive`=#{isSensitive}
                ,            `comment_content`=#{commentContent}
                ,            `index_no`=#{indexNo}
                ,            `book_score`=#{bookScore}
                ,            `create_time`=#{createTime}
                ,            `create_by`=#{createBy}
                ,            `modify_time`=#{modifyTime}
                ,            `modify_by`=#{modifyBy}
                where dyna_book_comment_id=#{dynaBookCommentId}


        ]]>
    </update>

    <delete id="deleteDynaBookComment">
        <![CDATA[


        delete from `dyna_book_comment` where dyna_book_comment_id=#{id}


        ]]>
    </delete>

    <select id="query" resultMap="dtoMap" parameterType="com.geeboo.dyna.server.client.dto.book.DynaBookCommentDTO">
        <include refid="sql_query"/>
    </select>

    <select id="findByCondition" resultMap="dtoMap" parameterType="com.geeboo.dyna.server.client.dto.book.DynaBookCommentDTO">
        <include refid="sql_query"/>
        limit 1
    </select>

    <sql id="sql_query">
        select `dyna_book_comment_id`
        ,`user_id`
        ,`book_user_id`
        ,`num_reply`
        ,`num_favor`
        ,`is_del`
        ,`is_sensitive`
        ,`comment_content`
        ,`index_no`
        ,`book_score`
        ,`create_time`
        ,`create_by`
        ,`modify_time`
        ,`modify_by`
        from `dyna_book_comment`
        <where>
            <if test="userId != null  ">
                user_id = #{userId}
            </if>
            <if test="bookUserId != null ">
                and book_user_id = #{bookUserId}
            </if>
            <if test="isDel != null ">
                and is_del = #{isDel}
            </if>
            <if test="isSensitive != null ">
                and is_sensitive = #{isSensitive}
            </if>
            <if test="numReply != null  and '' != numReply  ">
                and num_reply = #{numReply}
            </if>
            <if test="numFavor != null  and '' != numFavor  ">
                and num_favor = #{numFavor}
            </if>
        </where>
        order by `dyna_book_comment_id` desc
    </sql>

    <select id="getCommentByBookUserAndSpecialId" resultMap="listDtoMap">
        select `dyna_book_comment_id`
        ,`user_id`
        ,`book_user_id`
        ,`num_reply`
        ,`num_favor`
        ,`book_score`
        ,`comment_content`
        ,`create_time`
        from `dyna_book_comment`
        where
        book_user_id = #{bookUserId}
        and is_del = 0
        and user_id = #{specialId}
        order by `dyna_book_comment_id` desc
        limit #{pageSize}
    </select>

    <select id="getCommentByBookUserAndLastId" resultMap="listDtoMap">
        SELECT
        `dyna_book_comment_id`,
        `user_id`,
        `book_user_id`,
        `num_reply`,
        `num_favor`,
        `book_score`,
        `comment_content`,
        `create_time`
        FROM
        `dyna_book_comment` t
        WHERE
        book_user_id = #{bookUserId}
        and is_del = 0
        <if test="userId != null  and 0 != userId  ">
            <![CDATA[ and not EXISTS ( SELECT 1 from `dyna_book_comment` where user_id <> #{userId} and is_sensitive=1 and dyna_book_comment_id=t.dyna_book_comment_id ) ]]>
        </if>
        <if test="lastId != null  and 0 != lastId  ">
            <![CDATA[ and dyna_book_comment_id < #{lastId} ]]>
        </if>

        <if test="specialId != null  and 0 != specialId  ">
            <![CDATA[ and user_id <> #{specialId} ]]>
        </if>
        order by t.`dyna_book_comment_id` desc
        limit #{pageSize}
    </select>

    <select id="getCommentDetail" resultMap="listDtoMap">
        select `dyna_book_comment_id`
        ,`user_id`
        ,`book_user_id`
        ,`num_reply`
        ,`num_favor`
        ,`book_score`
        ,`comment_content`
        ,`create_time`
        from `dyna_book_comment`
        where dyna_book_comment_id = #{id}
    </select>

    <select id="getRecentCommentUserList" resultMap="dtoMap">
        select max(dyna_book_comment_id) as dyna_book_comment_id, user_id
        from `dyna_book_comment`
        where book_user_id = #{bookUserId}
        group by user_id order by dyna_book_comment_id desc
        limit 0, 2
    </select>

    <select id="getCommentCountGroupByAccount" resultType="java.lang.Long">
        select count(DISTINCT user_id)
        from `dyna_book_comment`
        where book_user_id = #{bookUserId}
    </select>

    <update id="batchUpdateReplyNum" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" separator=";">
            <![CDATA[update `dyna_book_comment` set `num_reply`= #{item.numReply} where dyna_book_comment_id = #{item.dynaBookCommentId}]]>
        </foreach>
    </update>

    <update id="batchUpdateFavorNum" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" separator=";"><![CDATA[update `dyna_book_comment` set `num_favor`= #{item.numFavor} where dyna_book_comment_id = #{item.dynaBookCommentId}]]></foreach>
    </update>
</mapper>
