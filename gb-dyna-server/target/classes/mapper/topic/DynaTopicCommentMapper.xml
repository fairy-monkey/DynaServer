<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geeboo.dyna.server.mapper.topic.IDynaTopicCommentMapper">
    <resultMap id="dtoMap" type="com.geeboo.dyna.server.client.dto.topic.DynaTopicCommentDTO">
        <id column="dyna_topic_comment_id" jdbcType="INTEGER" property="dynaTopicCommentId"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="dyna_topic_id" jdbcType="INTEGER" property="dynaTopicId"/>
        <result column="num_reply" jdbcType="INTEGER" property="numReply"/>
        <result column="num_favor" jdbcType="INTEGER" property="numFavor"/>
        <result column="is_del" jdbcType="TINYINT" property="isDel"/>
        <result column="comment_content" jdbcType="VARCHAR" property="commentContent"/>
        <result column="index_no" jdbcType="TINYINT" property="indexNo"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="create_by" jdbcType="INTEGER" property="createBy"/>
        <result column="modify_time" jdbcType="BIGINT" property="modifyTime"/>
        <result column="modify_by" jdbcType="INTEGER" property="modifyBy"/>

        <result column="is_sensitive" jdbcType="INTEGER" property="isSensitive"/>
    </resultMap>


    <resultMap id="listDtoMap" type="com.geeboo.dyna.server.client.dto.topic.DynaTopicCommentListDTO">
        <id column="dyna_topic_comment_id" jdbcType="INTEGER" property="dynaTopicCommentId"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="dyna_topic_id" jdbcType="INTEGER" property="dynaTopicId"/>
        <result column="topic_title" jdbcType="INTEGER" property="topicTitle"/>
        <result column="is_sensitive" jdbcType="INTEGER" property="isSensitive"/>
        <result column="num_reply" jdbcType="INTEGER" property="numReply"/>
        <result column="num_favor" jdbcType="INTEGER" property="numFavor"/>
        <result column="comment_content" jdbcType="VARCHAR" property="commentContent"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
    </resultMap>

    <select id="findById" resultMap="dtoMap">
        <![CDATA[





        select * from dyna_topic_comment  where dyna_topic_comment_id = #{dynaTopicCommentId}





        ]]>
    </select>

    <insert id="add" parameterType="com.geeboo.dyna.server.client.dto.topic.DynaTopicCommentDTO" useGeneratedKeys="true"
            keyProperty="dynaTopicCommentId">
        <![CDATA[





        insert into `dyna_topic_comment`(
                `user_id`
                ,`dyna_topic_id`
                ,`num_reply`
                ,`num_favor`
                ,`is_del`
                ,`is_sensitive`
                ,`comment_content`
                ,`index_no`
                ,`create_time`
                ,`create_by`
                ,`modify_time`
                ,`modify_by`
                )values(
                #{userId}
                ,#{dynaTopicId}
                ,#{numReply}
                ,#{numFavor}
                ,#{isDel}
                ,#{isSensitive}
                ,#{commentContent}
                ,#{indexNo}
                ,#{createTime}
                ,#{createBy}
                ,#{modifyTime}
                ,#{modifyBy}
                )





        ]]>
    </insert>

    <update id="update" parameterType="com.geeboo.dyna.server.client.dto.topic.DynaTopicCommentDTO">
        <![CDATA[





        update `dyna_topic_comment` set
                            `user_id`=#{userId}
                ,            `dyna_topic_id`=#{dynaTopicId}
                ,            `num_reply`=#{numReply}
                ,            `num_favor`=#{numFavor}
                ,            `is_del`=#{isDel}
                ,            `is_sensitive`=#{isSensitive}
                ,            `comment_content`=#{commentContent}
                ,            `index_no`=#{indexNo}
                ,            `create_time`=#{createTime}
                ,            `create_by`=#{createBy}
                ,            `modify_time`=#{modifyTime}
                ,            `modify_by`=#{modifyBy}
                where dyna_topic_comment_id=#{dynaTopicCommentId}





        ]]>
    </update>

    <delete id="deleteDynaTopicComment">
        <![CDATA[





        delete from `dyna_topic_comment` where dyna_topic_comment_id=#{id}





        ]]>
    </delete>

    <select id="query" resultMap="dtoMap" parameterType="com.geeboo.dyna.server.client.dto.topic.DynaTopicCommentDTO">
        select `dyna_topic_comment_id`
        ,`user_id`
        ,`dyna_topic_id`
        ,`num_reply`
        ,`num_favor`
        ,`is_del`
        ,`is_sensitive`
        ,`comment_content`
        ,`index_no`
        ,`create_time`
        ,`create_by`
        ,`modify_time`
        ,`modify_by`
        from `dyna_topic_comment`
        <where>
            <if test="userId != null  and '' != userId  ">
                user_id = #{userId}
            </if>
            <if test="isSensitive != null ">
                and is_sensitive = #{isSensitive}
            </if>
            <if test="dynaTopicId != null  and '' != dynaTopicId  ">
                and dyna_topic_id = #{dynaTopicId}
            </if>
            <if test="numReply != null  and '' != numReply  ">
                and num_reply = #{numReply}
            </if>
            <if test="numFavor != null  and '' != numFavor  ">
                and num_favor = #{numFavor}
            </if>
        </where>
        order by `dyna_topic_comment_id` desc
    </select>

    <select id="getCommentByTopicAndSpecialId" resultMap="listDtoMap">
        select `dyna_topic_comment_id`
        ,`user_id`
        ,`dyna_topic_id`
        ,`num_reply`
        ,`num_favor`
        ,`comment_content`
        ,`create_time`
        from `dyna_topic_comment`
        where dyna_topic_id = #{dynaTopicId} and is_del = 0
        and is_sensitive= 0
        and user_id = #{specialId}
        order by `dyna_topic_comment_id` desc limit #{pageSize}
    </select>

    <select id="getCommentByTopicAndLastId" resultMap="listDtoMap">

        select t.`dyna_topic_comment_id`
        ,t.`user_id`
        ,t.`dyna_topic_id`
        ,t.`num_reply`
        ,t.`num_favor`
        ,t.`comment_content`
        ,t.`create_time`
        from `dyna_topic_comment` t
        where t.`dyna_topic_id` = #{dynaTopicId}
        and t.`is_del` = 0
        <if test="userId != null  and 0 != userId  ">
            <![CDATA[  and not EXISTS (SELECT 1 from `dyna_topic_comment` where user_id <> #{userId} and is_sensitive=1 and dyna_topic_comment_id=t.dyna_topic_comment_id ) ]]>
    </if>
        <if test="lastId != null  and 0 != lastId  ">
            <![CDATA[ and t.`dyna_topic_comment_id` < #{lastId} ]]>
        </if>
        <if test="specialId != null  and 0 != specialId  ">
            <![CDATA[ and t.`user_id` <> #{specialId} ]]>
        </if>
        order by <![CDATA[ (t.`num_reply` + t.`num_favor`) ]]> desc , t.`create_time`DESC
        limit #{pageSize}
    </select>

    <select id="getHotCommentByTopic" resultMap="listDtoMap">
        select t.`dyna_topic_comment_id`
        ,t.`user_id`
        ,t.`dyna_topic_id`
        ,t.`num_reply`
        ,t.`num_favor`
        ,t.`comment_content`
        ,t.`create_time`
        from `dyna_topic_comment` t
        where t.`dyna_topic_id` = #{dynaTopicId}
        and t.`is_del` = 0
        <if test="userId != null  and 0 != userId  ">
            <![CDATA[  and not EXISTS (SELECT 1 from `dyna_topic_comment` where user_id <> #{userId} and is_sensitive=1 and dyna_topic_comment_id=t.dyna_topic_comment_id ) ]]>
        </if>
        <if test="specialId != null  and 0 != specialId  ">
            <![CDATA[ and t.`user_id` <> #{specialId} ]]>
        </if>
        order by <![CDATA[ (t.`num_reply` + t.`num_favor`) ]]> desc , t.`create_time`DESC
        limit #{pageSize}
    </select>

    <select id="getCommentByTopic" resultMap="listDtoMap">
        select `dyna_topic_comment_id`
        ,`user_id`
        ,`dyna_topic_id`
        ,`num_reply`
        ,`num_favor`
        ,`comment_content`
        ,`create_time`
        from `dyna_topic_comment` t
        where dyna_topic_id = #{dynaTopicId}
        and is_del = 0
        <if test="userId != null  and 0 != userId  ">
            <![CDATA[  and not EXISTS (SELECT 1 from `dyna_topic_comment` where user_id <> #{userId} and is_sensitive=1 and dyna_topic_comment_id=t.dyna_topic_comment_id ) ]]>
        </if>
        <if test="excludeIdList != null  and excludeIdList.size()>0">
            and dyna_topic_comment_id not in
            <foreach collection="excludeIdList" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="lastId != null  and 0 != lastId  ">
            <![CDATA[ and dyna_topic_comment_id < #{lastId} ]]>
        </if>
        order by dyna_topic_comment_id desc limit #{pageSize}
    </select>

    <select id="getCommentDetail" resultMap="listDtoMap">
        select c.`dyna_topic_comment_id`
        ,c.`user_id`
        ,c.`dyna_topic_id`
        ,c.`num_reply`
        ,c.`num_favor`
        ,c.`comment_content`
        ,c.`create_time`
        ,t.`topic_title`
        from `dyna_topic_comment` c
        left join `dyna_topic` t on c.`dyna_topic_id` = t.`dyna_topic_id`
        where dyna_topic_comment_id = #{id}
    </select>

    <select id="getRecentCommentUserList" resultMap="dtoMap">
        select DISTINCT ( dyna_topic_comment_id ) as dyna_topic_comment_id, user_id
        from `dyna_topic_comment`
        where dyna_topic_id = #{dynaTopicId} and is_del = 0
        order by create_time desc
        limit 3
    </select>

    <select id="getCommentCountGroupByAccount" resultType="java.lang.Long">
        select count(DISTINCT user_id)
        from `dyna_topic_comment`
        where dyna_topic_id = #{dynaTopicId}
    </select>

    <update id="batchUpdateReplyNum" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            <![CDATA[
            update `dyna_topic_comment` set
                    `num_reply`=#{item.numReply}
                    where dyna_topic_comment_id=#{item.dynaTopicCommentId}
            ]]>
        </foreach>
    </update>

    <update id="batchUpdateFavorNum" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            <![CDATA[
            update `dyna_topic_comment` set
                    `num_favor`=#{item.numFavor}
                    where dyna_topic_comment_id=#{item.dynaTopicCommentId}
            ]]>
        </foreach>
    </update>
</mapper>
