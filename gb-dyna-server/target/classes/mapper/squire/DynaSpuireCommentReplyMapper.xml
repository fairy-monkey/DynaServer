<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geeboo.dyna.server.mapper.squire.IDynaSquireCommentReplyMapper">
    <resultMap id="dtoMap" type="com.geeboo.dyna.server.client.dto.squire.DynaSquireCommentReplyDTO">
        <id column="comment_reply_id" jdbcType="INTEGER" property="commentReplyId"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="dyna_squire_id" jdbcType="INTEGER" property="dynaSquireId"/>
        <result column="dyna_squire_comment_id" jdbcType="INTEGER" property="dynaSquireCommentId"/>
        <result column="to_comment_reply_id" jdbcType="INTEGER" property="toCommentReplyId"/>
        <result column="is_del" jdbcType="TINYINT" property="isDel"/>
        <result column="reply_content" jdbcType="VARCHAR" property="replyContent"/>
        <result column="to_user_id" jdbcType="INTEGER" property="toUserId"/>
        <result column="reply_type" jdbcType="TINYINT" property="replyType"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="create_by" jdbcType="INTEGER" property="createBy"/>
        <result column="modify_time" jdbcType="BIGINT" property="modifyTime"/>
        <result column="modify_by" jdbcType="INTEGER" property="modifyBy"/>

        <result column="is_sensitive" jdbcType="INTEGER" property="isSensitive"/>
    </resultMap>

    <resultMap id="listDtoMap" type="com.geeboo.dyna.server.client.dto.squire.DynaSquireReplyListDTO">
        <id column="comment_reply_id" jdbcType="INTEGER" property="commentReplyId"/>
        <result column="dyna_squire_id" jdbcType="INTEGER" property="dynaSquireId"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="dyna_squire_comment_id" jdbcType="INTEGER" property="dynaSquireCommentId"/>
        <result column="to_comment_reply_id" jdbcType="INTEGER" property="toCommentReplyId"/>
        <result column="reply_content" jdbcType="VARCHAR" property="replyContent"/>
        <result column="to_user_id" jdbcType="INTEGER" property="toUserId"/>
        <result column="reply_type" jdbcType="TINYINT" property="replyType"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="is_sensitive" jdbcType="INTEGER" property="isSensitive"/>
    </resultMap>

    <select id="findById" resultMap="dtoMap">
        <![CDATA[

        select * from dyna_squire_comment_reply  where comment_reply_id = #{commentReplyId}

        ]]>
    </select>

    <insert id="add" parameterType="com.geeboo.dyna.server.client.dto.squire.DynaSquireCommentReplyDTO"
            useGeneratedKeys="true" keyProperty="commentReplyId">
        <![CDATA[

        insert into `dyna_squire_comment_reply`(
                `user_id`
                ,`dyna_squire_id`
                ,`dyna_squire_comment_id`
                ,`to_comment_reply_id`
                ,`is_del`
                ,`is_sensitive`
                ,`reply_content`
                ,`to_user_id`
                ,`reply_type`
                ,`create_time`
                ,`create_by`
                ,`modify_time`
                ,`modify_by`
                )values(
                #{userId}
                ,#{dynaSpuireId}
                ,#{dynaSquireCommentId}
                ,#{toCommentReplyId}
                ,#{isDel}
                ,#{isSensitive}
                ,#{replyContent}
                ,#{toUserId}
                ,#{replyType}
                ,#{createTime}
                ,#{createBy}
                ,#{modifyTime}
                ,#{modifyBy}
                )

        ]]>
    </insert>

    <update id="update" parameterType="com.geeboo.dyna.server.client.dto.squire.DynaSquireCommentReplyDTO">
        <![CDATA[

        update `dyna_squire_comment_reply` set
                            `user_id`=#{userId}
                ,            `dyna_squire_id`=#{dynaSpuireId}
                ,            `dyna_squire_comment_id`=#{dynaSquireCommentId}
                ,            `to_comment_reply_id`=#{toCommentReplyId}
                ,            `is_del`=#{isDel}
                ,            `is_sensitive`=#{isSensitive}
                ,            `reply_content`=#{replyContent}
                ,            `to_user_id`=#{toUserId}
                ,            `reply_type`=#{replyType}
                ,            `create_time`=#{createTime}
                ,            `create_by`=#{createBy}
                ,            `modify_time`=#{modifyTime}
                ,            `modify_by`=#{modifyBy}
                where comment_reply_id=#{commentReplyId}

        ]]>
    </update>

    <delete id="deleteDynaSquireCommentReply">
        <![CDATA[

        delete from `dyna_squire_comment_reply` where comment_reply_id=#{id}

        ]]>
    </delete>

    <delete id="deleteByCommentId">
        <![CDATA[

        delete from `dyna_squire_comment_reply` where dyna_squire_comment_id=#{commentId}

        ]]>
    </delete>

    <select id="query" resultMap="dtoMap"
            parameterType="com.geeboo.dyna.server.client.dto.squire.DynaSquireCommentReplyDTO">
        select `comment_reply_id`
        ,`user_id`
        ,`dyna_squire_id`
        ,`dyna_squire_comment_id`
        ,`to_comment_reply_id`
        ,`is_del`
        ,`is_sensitive`
        ,`reply_content`
        ,`to_user_id`
        ,`reply_type`
        ,`create_time`
        ,`create_by`
        ,`modify_time`
        ,`modify_by`
        from `dyna_squire_comment_reply`
        <where>
            <if test="dynaSquireCommentId != null  and '' != dynaSquireCommentId  ">
                dyna_squire_comment_id = #{dynaSquireCommentId}
            </if>
            <if test="replyContent != null  and '' != replyContent  ">
                and reply_content = #{replyContent}
            </if>
            <if test="userId != null  and '' != userId  ">
                and user_id = #{userId}
            </if>
            <if test="isSensitive != null ">
                and is_sensitive = #{isSensitive}
            </if>
            <if test="createTime != null  and '' != createTime  ">
                and create_time = #{createTime}
            </if>
        </where>
        order by `comment_reply_id` desc
    </select>

    <select id="queryReplyList" resultMap="listDtoMap"
            parameterType="com.geeboo.dyna.server.client.dto.squire.DynaSquireReplyListDTO">
        SELECT
        `comment_reply_id`,
        `user_id`,
        `dyna_squire_id`,
        `dyna_squire_comment_id`,
        `to_comment_reply_id`,
        `reply_content`,
        `to_user_id`,
        `reply_type`,
        `create_time`
        FROM
        (
        SELECT
        `comment_reply_id`,
        `user_id`,
        `dyna_squire_id`,
        `dyna_squire_comment_id`,
        `to_comment_reply_id`,
        `reply_content`,
        `to_user_id`,
        `reply_type`,
        `create_time`
        FROM
        `dyna_squire_comment_reply`
          where dyna_squire_comment_id = #{dynaSquireCommentId}
        <if test="userId != null  and 0 != userId  ">
            <![CDATA[ and user_id <> #{userId} ]]>
        </if>
        and is_sensitive=0
          and is_del = 0

        UNION ALL
        SELECT
        `comment_reply_id`,
        `user_id`,
        `dyna_squire_id`,
        `dyna_squire_comment_id`,
        `to_comment_reply_id`,
        `reply_content`,
        `to_user_id`,
        `reply_type`,
        `create_time`
        FROM
        `dyna_squire_comment_reply`
        WHERE
        dyna_squire_comment_id = #{dynaSquireCommentId}
        <if test="userId != null  and 0 != userId  ">
            <![CDATA[ and user_id = #{userId} ]]>
        </if>
        AND is_del = 0
        ) t
        ORDER BY
        t.`comment_reply_id` DESC

    </select>

    <select id="countReplyByComment" resultType="java.lang.Long">
        select count(*)
        from `dyna_squire_comment_reply`
        where dyna_squire_comment_id = #{dynaSquireCommentId}
        and is_del = 0 and is_sensitive=0
    </select>

</mapper>
