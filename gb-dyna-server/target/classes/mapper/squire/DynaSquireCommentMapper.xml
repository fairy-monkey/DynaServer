<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geeboo.dyna.server.mapper.squire.IDynaSquireCommentMapper">
    <resultMap id="dtoMap" type="com.geeboo.dyna.server.client.dto.squire.DynaSquireCommentDTO">
        <id column="dyna_squire_comment_id" jdbcType="INTEGER" property="dynaSquireCommentId"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="dyna_squire_id" jdbcType="INTEGER" property="dynaSquireId"/>
        <result column="num_reply" jdbcType="INTEGER" property="numReply"/>
        <result column="num_favor" jdbcType="INTEGER" property="numFavor"/>
        <result column="is_del" jdbcType="TINYINT" property="isDel"/>
        <result column="comment_content" jdbcType="VARCHAR" property="commentContent"/>
        <result column="comment_type" jdbcType="TINYINT" property="commentType"/>
        <result column="to_user_id" jdbcType="INTEGER" property="toUserId"/>
        <result column="index_no" jdbcType="TINYINT" property="indexNo"/>
        <result column="book_score" jdbcType="TINYINT" property="bookScore"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="create_by" jdbcType="INTEGER" property="createBy"/>
        <result column="modify_time" jdbcType="BIGINT" property="modifyTime"/>
        <result column="modify_by" jdbcType="INTEGER" property="modifyBy"/>

        <result column="is_sensitive" jdbcType="INTEGER" property="isSensitive"/>
    </resultMap>

    <resultMap id="listDtoMap" type="com.geeboo.dyna.server.client.dto.squire.DynaSquireCommentListDTO">
        <id column="dyna_squire_comment_id" jdbcType="INTEGER" property="dynaSquireCommentId"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="comment_type" jdbcType="TINYINT" property="commentType"/>
        <result column="to_user_id" jdbcType="INTEGER" property="toUserId"/>
        <result column="dyna_squire_id" jdbcType="INTEGER" property="dynaSquireId"/>
        <result column="num_reply" jdbcType="INTEGER" property="numReply"/>
        <result column="num_favor" jdbcType="INTEGER" property="numFavor"/>
        <result column="book_score" jdbcType="TINYINT" property="bookScore"/>
        <result column="comment_content" jdbcType="VARCHAR" property="commentContent"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="is_sensitive" jdbcType="INTEGER" property="isSensitive"/>
    </resultMap>

    <select id="findById" resultMap="dtoMap">
        <![CDATA[


        select * from dyna_squire_comment  where dyna_squire_comment_id = #{dynaSquireCommentId}


        ]]>
    </select>

    <insert id="add" parameterType="com.geeboo.dyna.server.client.dto.squire.DynaSquireCommentDTO"
            useGeneratedKeys="true" keyProperty="dynaSquireCommentId">
        <![CDATA[


        insert into `dyna_squire_comment`(
                `user_id`
                ,`dyna_squire_id`
                ,`num_reply`
                ,`num_favor`
                ,`is_del`
                ,`is_sensitive`
                ,`comment_content`
                ,`comment_type`
                ,`to_user_id`
                ,`index_no`
                ,`book_score`
                ,`create_time`
                ,`create_by`
                ,`modify_time`
                ,`modify_by`
                )values(
                #{userId}
                ,#{dynaSquireId}
                ,#{numReply}
                ,#{numFavor}
                ,#{isDel}
                ,#{isSensitive}
                ,#{commentContent}
                ,#{commentType}
                ,#{toUserId}
                ,#{indexNo}
                ,#{bookScore}
                ,#{createTime}
                ,#{createBy}
                ,#{modifyTime}
                ,#{modifyBy}
                )


        ]]>
    </insert>

    <update id="update" parameterType="com.geeboo.dyna.server.client.dto.squire.DynaSquireCommentDTO">
        <![CDATA[


        update `dyna_squire_comment` set
                            `user_id`=#{userId}
                ,            `dyna_squire_id`=#{dynaSquireId}
                ,            `num_reply`=#{numReply}
                ,            `num_favor`=#{numFavor}
                ,            `is_del`=#{isDel}
                ,            `is_sensitive`=#{isSensitive}
                ,            `comment_content`=#{commentContent}
                ,            `comment_type`=#{commentType}
                ,            `to_user_id`=#{toUserId}
                ,            `index_no`=#{indexNo}
                ,            `book_score`=#{bookScore}
                ,            `create_time`=#{createTime}
                ,            `create_by`=#{createBy}
                ,            `modify_time`=#{modifyTime}
                ,            `modify_by`=#{modifyBy}
                where dyna_squire_comment_id=#{dynaSquireCommentId}


        ]]>
    </update>

    <delete id="deleteDynaSquireComment">
        <![CDATA[


        delete from `dyna_squire_comment` where dyna_squire_comment_id=#{id}


        ]]>
    </delete>

    <select id="getCommentBySquireAndLastId" resultMap="listDtoMap">
        select `dyna_squire_comment_id`
        ,`user_id`
        ,`dyna_squire_id`
        ,`comment_type`
        ,`to_user_id`
        ,`num_reply`
        ,`num_favor`
        ,`comment_content`
        ,`create_time`
        from `dyna_squire_comment` t
        where dyna_squire_id = 1
        and is_del = 0
        <if test="lastId != null  and 0 != lastId  ">
            <![CDATA[ and dyna_squire_comment_id < #{lastId} ]]>
        </if>
        <if test="userId != null  and 0 != userId  ">
            <![CDATA[ and not EXISTS (SELECT 1 from `dyna_squire_comment` where user_id <> #{userId} and is_sensitive=1 and dyna_squire_comment_id=t.dyna_squire_comment_id ) ]]>
        </if>
        ORDER BY dyna_squire_comment_id desc
        LIMIT #{pageSize}
    </select>


    <select id="getCommentListByLastId" resultMap="listDtoMap">
        select `dyna_squire_comment_id`
        ,`user_id`
        ,`dyna_squire_id`
        ,`comment_type`
        ,`to_user_id`
        ,`num_reply`
        ,`num_favor`
        ,`comment_content`
        ,`create_time`
        from `dyna_squire_comment`
        where  is_del = 0 and is_sensitive = 0
        <if test="dynaSquireId != null  and 0 != dynaSquireId  ">
            <![CDATA[ and dyna_squire_id = #{dynaSquireId} ]]>
        </if>
        <if test="lastId != null  and 0 != lastId  ">
            <![CDATA[ and dyna_squire_comment_id < #{lastId} ]]>
        </if>
        ORDER BY dyna_squire_comment_id desc
        LIMIT #{pageSize}
    </select>


    <select id="getCommentDetail" resultMap="listDtoMap">
        select `dyna_squire_comment_id`
        ,`user_id`
        ,`dyna_squire_id`
        ,`comment_type`
        ,`to_user_id`
        ,`num_reply`
        ,`num_favor`
        ,`comment_content`
        ,`create_time`
        from `dyna_squire_comment`
        where dyna_squire_comment_id = #{id}
    </select>

    <select id="countCommentBySquire" resultType="java.lang.Long">
        select count(*)
        from `dyna_squire_comment`
        where dyna_squire_id = #{squireId}
    </select>
</mapper>
